<?php
// Inicia a sess√£o para permitir o uso de vari√°veis de sess√£o
session_start();

// Inclui o arquivo de configura√ß√£o com a conex√£o ao banco de dados (mysqli)
include('../config/config.php');


// ----------------------------
// üîí Verifica√ß√£o de login
// ----------------------------

// Verifica se o usu√°rio est√° logado.
// Caso contr√°rio, redireciona para a p√°gina de login.
if (!isset($_SESSION['usuario_id'])) {
    header("Location: login.php");
    exit; // Interrompe a execu√ß√£o para evitar acesso indevido
}


// ----------------------------
// üì¶ Verifica√ß√£o dos par√¢metros recebidos
// ----------------------------

// Verifica se foram passados os par√¢metros 'tipo' e 'id' pela URL (via m√©todo GET)
if (isset($_GET['tipo']) && isset($_GET['id'])) {

    // Captura o tipo (entrada ou sa√≠da) e o ID do registro
    $tipo = strtolower(trim($_GET['tipo'])); // Converte para min√∫sculo e remove espa√ßos
    $id = intval($_GET['id']); // Converte o ID para inteiro (evita inje√ß√£o SQL)


    // ----------------------------
    // üß© Determina a tabela correta
    // ----------------------------

    // Define qual tabela ser√° usada com base no tipo recebido
    if ($tipo === 'entrada') {
        $tabela = 'entrada';
    } 
    // Aceita tanto "sa√≠da" (com acento) quanto "saida" (sem acento)
    elseif ($tipo === 'sa√≠da' || $tipo === 'saida') {
        $tabela = 'saida';
    } 
    // Caso o tipo seja diferente, interrompe o script com uma mensagem de erro
    else {
        die("Tipo inv√°lido.");
    }


    // ----------------------------
    // üóëÔ∏è Execu√ß√£o da exclus√£o no banco
    // ----------------------------

    // Cria uma query preparada para evitar SQL Injection
    // O nome da tabela √© definido dinamicamente, mas o ID √© passado como par√¢metro seguro
    $stmt = $mysqli->prepare("DELETE FROM $tabela WHERE id = ?");
    $stmt->bind_param('i', $id); // 'i' = tipo inteiro


    // Executa o comando e verifica o resultado
    if ($stmt->execute()) {
        // Caso a exclus√£o seja bem-sucedida, exibe mensagem e redireciona para relat√≥rios
        echo "<script>
                alert('Registro exclu√≠do com sucesso!');
                window.location.href='relatorios.php';
              </script>";
    } else {
        // Caso ocorra algum erro na exclus√£o
        echo "<script>
                alert('Erro ao excluir o registro.');
                window.location.href='relatorios.php';
              </script>";
    }

    // Fecha o statement ap√≥s o uso
    $stmt->close();
} 
// Caso os par√¢metros esperados n√£o tenham sido enviados
else {
    echo "<script>
            alert('Dados inv√°lidos para exclus√£o.');
            window.location.href='relatorios.php';
          </script>";
}
?>

<!--
| Etapa                                        | Descri√ß√£o                                                                         |
| -------------------------------------------- | --------------------------------------------------------------------------------- |
| **1Ô∏è‚É£ Sess√£o iniciada**                      | Garante que apenas usu√°rios autenticados possam excluir dados.                    |
| **2Ô∏è‚É£ Verifica√ß√£o de par√¢metros**            | Confere se `tipo` e `id` est√£o presentes na URL (`?tipo=entrada&id=5`).           |
| **3Ô∏è‚É£ Defini√ß√£o da tabela**                  | Usa o par√¢metro `tipo` para decidir se vai excluir de `entrada` ou `saida`.       |
| **4Ô∏è‚É£ Execu√ß√£o segura (prepared statement)** | Protege contra SQL Injection, passando o ID como par√¢metro.                       |
| **5Ô∏è‚É£ Mensagem ao usu√°rio**                  | Exibe `alert()` no navegador e redireciona automaticamente para `relatorios.php`. |
| **6Ô∏è‚É£ Tratamento de erros**                  | Mostra mensagens apropriadas caso os par√¢metros ou a exclus√£o falhem.             |
-->